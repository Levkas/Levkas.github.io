{"version":3,"sources":["layout/Header.jsx","components/Movies/Movie.jsx","components/Shared/NotFound.jsx","components/Movies/Movies.jsx","components/Preloader/Preloader.jsx","components/Search/Search.jsx","layout/Main.jsx","layout/Footer.jsx","App.js","index.js"],"names":["Header","className","href","id","Movie","props","imdbID","Poster","src","Title","Year","Type","NotFound","errorMessage","Movies","movies","length","map","movie","Preloader","Search","getMovie","Function","prototype","useState","searchValue","setSearchValue","filterType","setFilterType","filterChange","event","target","dataset","type","placeholder","value","onChange","onKeyDown","keyCode","onClick","name","data-type","checked","API_KEY","process","Main","setMovies","loading","setLoading","setErrorMessage","nameMovie","filter","fetch","then","response","json","data","totalResults","Error","useEffect","Footer","Date","getFullYear","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68eee8f3.chunk.js","sourcesContent":["function Header() {\r\n    return (\r\n        <nav className=\"green darken-1\">\r\n            <div className=\"nav-wrapper\">\r\n                <a href=\"#\" className=\"brand-logo\">Movies finder</a>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><a href=\"#\">My other app</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport { Header };","export const Movie = (props) => {\r\n    return (\r\n        <div id={props.imdbID} className='card movie'>\r\n            <div className='card-image movie-image'>\r\n                {props.Poster === 'N/A' ? (\r\n                    <img\r\n                        className='activator film__img'\r\n                        src={`https://via.placeholder.com/300x400?text=${props.Title}`}\r\n                    />\r\n                ) : (\r\n                    <img className='activator film__img' src={props.Poster} />\r\n                )}\r\n            </div>\r\n            <div className='card-content movie-content'>\r\n                <span className='card-title activator green-text text-darken-1'>\r\n                    {props.Title}\r\n                </span>\r\n                <p>\r\n                    {props.Year} <span className='right'>{props.Type}</span>{' '}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","export const NotFound = (props) => {\r\n    return <h4>{props.errorMessage}</h4>;\r\n};\r\n","import { Movie } from './Movie';\r\nimport { NotFound } from '../Shared/NotFound';\r\n\r\nexport const Movies = (props) => {\r\n    return (\r\n        <div className='movies'>\r\n            {props.movies.length ? (\r\n                props.movies.map((movie) => {\r\n                    return <Movie key={movie.imdbID} {...movie} />;\r\n                })\r\n            ) : (\r\n                <NotFound\r\n                    key={props.imdbID}\r\n                    errorMessage={props.errorMessage}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","export const Preloader = () => {\r\n    return <div className=\"progress\">\r\n        <div className=\"indeterminate\"></div>\r\n    </div>\r\n\r\n}","import React, { useState } from 'react';\r\n\r\nconst Search = (props) => {\r\n    const { getMovie = Function.prototype } = props;\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [filterType, setFilterType] = useState('');\r\n\r\n    const changeSearchValue = (event) => {\r\n        setSearchValue(event.target.value);\r\n    };\r\n\r\n    const findMovie = (event) => {\r\n        if (event.keyCode === 13) {\r\n            getMovie(searchValue, filterType);\r\n        }\r\n    };\r\n\r\n    const filterChange = (event) => {\r\n        setFilterType(event.target.dataset.type);\r\n        getMovie(searchValue, event.target.dataset.type);\r\n    };\r\n\r\n    return (\r\n        <div className='row'>\r\n            <div className='input-field search'>\r\n                <input\r\n                    placeholder='Input name movie'\r\n                    type='text'\r\n                    className='validate'\r\n                    value={searchValue}\r\n                    onChange={changeSearchValue}\r\n                    onKeyDown={findMovie}\r\n                />\r\n                <button\r\n                    className='btn green darken-2'\r\n                    onClick={() => {\r\n                        getMovie(searchValue, filterType);\r\n                    }}\r\n                >\r\n                    Search\r\n                </button>\r\n            </div>\r\n            <div className='filters'>\r\n                <p>\r\n                    <label>\r\n                        <input\r\n                            className='with-gap'\r\n                            name='filterValue'\r\n                            type='radio'\r\n                            data-type=''\r\n                            onChange={filterChange}\r\n                            checked={filterType === ''}\r\n                        />\r\n                        <span>All</span>\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        <input\r\n                            className='with-gap '\r\n                            name='filterValue'\r\n                            type='radio'\r\n                            data-type='movie'\r\n                            onChange={filterChange}\r\n                            checked={filterType === 'movie'}\r\n                        />\r\n                        <span>Movies only</span>\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        <input\r\n                            className='with-gap'\r\n                            name='filterValue'\r\n                            type='radio'\r\n                            data-type='series'\r\n                            onChange={filterChange}\r\n                            checked={filterType === 'series'}\r\n                        />\r\n                        <span>Series only</span>\r\n                    </label>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Search };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Movies } from '../components/Movies/Movies';\r\nimport { Preloader } from '../components/Preloader/Preloader';\r\nimport { Search } from '../components/Search/Search';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst Main = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const getMovie = (nameMovie = 'Matrix', filter = '') => {\r\n        setLoading(true);\r\n        fetch(\r\n            `https://www.omdbapi.com/?s=${nameMovie}&type=${filter}&apikey=${API_KEY}`\r\n        )\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.totalResults > 0) {\r\n                    setMovies(data.Search);\r\n                    setLoading(false);\r\n                } else {\r\n                    setMovies([]);\r\n                    setLoading(false);\r\n                    setErrorMessage(data.Error);\r\n                }\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMovie();\r\n    }, []);\r\n\r\n    return (\r\n        <main className='container content'>\r\n            <Search getMovie={getMovie} />\r\n            {loading ? (\r\n                <Preloader />\r\n            ) : (\r\n                <Movies movies={movies} errorMessage={errorMessage} />\r\n            )}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport { Main };\r\n","function Footer() {\r\n    return (\r\n        <footer className=\"page-footer green lighten-2\">\r\n            <div className=\"footer-copyright\">\r\n                <div className=\"container\">\r\n                    © {new Date().getFullYear} Copyright Text\r\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More my app</a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport { Footer }","import {Header} from './layout/Header'\r\nimport {Main} from './layout/Main'\r\nimport {Footer} from './layout/Footer'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}